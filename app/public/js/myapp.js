/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/myapp.js":
/*!*******************************!*\
  !*** ./resources/js/myapp.js ***!
  \*******************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n$.ajaxSetup({\n  headers: {\n    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n  }\n}); //handling of the new form buttons \n//bind an event listener to them\n//    $('.newForm').on('click',function(){\n//\n//        var targetDiv = this.getAttribute('data-name');\n//        var selector = \"#\"+targetDiv+\"_form\";\n//        var editForm = $(selector);\n//\n//        //display the modal\n//        $('#newComment').modal('show');\n//    });\n\n$.ajax({\n  type: \"GET\",\n  url: \"/show\",\n  dataType: \"json\",\n  success: function success(data) {\n    var output = \"\";\n    var currentStructure = \"\";\n    console.log(data);\n\n    for (var i = 0; i < data.length; i++) {\n      var e = data[i]; //change the header\n\n      if (currentStructure != e.name) {\n        currentStructure = e.name;\n        console.log(currentStructure);\n        var linkHref = e.name.replace(/ /g, \"_\");\n        output += \"<h1 class=\\\"stcructureTitle aOffset\\\" id=\\\"link_\".concat(linkHref, \"\\\">\").concat(e.name, \"</h1>\");\n      }\n\n      if (e.isApproved == 1) {\n        output += \" <div class=\\\"card text-white bg-success mb-3 shadow\\\">\";\n      } else {\n        output += \" <div class=\\\"card text-white bg-secondary mb-3 shadow\\\">\";\n      }\n\n      output += \"<div class=\\\"card-header\\\">\\n    <span class=\\\"glyphicon glyphicon-copy\\\"></span>\\n\\n   <span class=\\\"commentId\\\">#\".concat(e.code).concat(e.id, \"</span>\\n\\n<div class=\\\"form-check\\\">\\n<!--Clipboard checkbox -->\\n  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" value=\\\"\").concat(e.tone, \"\\\" id=\\\"\").concat(e.id, \"\\\">\\n  <label class=\\\"form-check-label\\\" for=\\\"check_\").concat(e.id, \"\\\">\\n   <span data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" title=\\\"Copy this comment to the clipboard\\\"> Clipboard</span>\\n  </label>\\n\\n<!--End of Clipboard checkbox -->\");\n\n      if (e.tone == 1) {\n        output += \"<span class=\\\"badge badge-success toneBadge\\\">Positive Tone</span>\";\n      } else {\n        output += \"<span class=\\\"badge badge-danger toneBadge\\\">Negative Tone</span>\";\n      }\n\n      if (e.isApproved == 1) {\n        output += \"<span class=\\\"toneBadge badge badge-info\\\">Approved Comment</span>\";\n      } else {\n        output += \"<span class=\\\"toneBadge badge  badge-warning\\\">Pending Comment</span>\";\n      }\n\n      output += \"\\n                        </div>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                        <p class=\\\"card-text\\\">\".concat(e.comment, \"</p>\\n                        <p class=\\\"submittedBy\\\">Submitted by <a href=\\\"#\\\" class=\\\"authorLink\\\">\").concat(e.firstName).concat(e.lastName, \" @ \").concat(e.updated_at, \"</a></p>\\n                        </div>\\n                        </div>\");\n    }\n\n    $('#cards').html(output);\n  } //success\n\n});\n$('.saveNewComment').on('click', function () {\n  var data = {\n    'firstName': $('#firstName').val(),\n    'lastName': $('#lastName').val(),\n    'email': $('#email').val(),\n    'tone': $('#tone').val(),\n    'comment': $('#comment').val(),\n    'structureId': $('#structureId').val()\n  }; //saving the new comment\n\n  $.ajax({\n    type: \"POST\",\n    url: \"/\",\n    dataType: \"json\",\n    data: data,\n    success: function success(data) {\n      $('#newComment').modal('hide');\n      $('#newComment').reset();\n    },\n    error: function error(data) {\n      var errormsg = \"\";\n      var errors = Object.entries(data.responseJSON.errors).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        return {\n          key: key,\n          value: value\n        };\n      });\n      errorOutput = \"\";\n\n      for (var i = 0; i < errors.length; i++) {\n        errorOutput += \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\".concat(err = errors[i].value[0], \"</div>\");\n      }\n\n      $('#errormsg').empty().html(errorOutput);\n    }\n  });\n});\n$('.closeNewForm').on('click', function () {\n  console.log(\"Reset\");\n  $('#newCommentForm').trigger(\"reset\");\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/myapp.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/myapp.js"]();
/******/ 	
/******/ })()
;